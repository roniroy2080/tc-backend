const express=require("express"),app=express(),cors=require("cors"),mongoose=require("mongoose");app.use(cors({methods:["POST","GET"],origin:["https://tclottery.vercel.app"],credentials:!0})),app.use(express.json());let mongoose_url="mongodb+srv://roniroy2080:am208014@cluster0.ioe2dyo.mongodb.net/Tc_lottery?retryWrites=true&w=majority";mongoose.connect(mongoose_url,{writeConcern:{w:"majority"}}).then((()=>console.log("connection success"))).catch((e=>console.log(`Something Went Wrong : ${e.message}`)));const url="https://9987cw.co/api/webapi/GetNoaverageEmerdList";let Users_Schema=require("./Schema").User_Schema_details;const cron=require("node-cron");var isStarted=!0,number_count=0;let task=cron.schedule("* * * * *",(async()=>{number_count+=1;let e=(new Date).toLocaleString(),s=Users_Schema();await s.findOneAndUpdate({_id:"65f8b0585ed4d0872ec426fd"},{$set:{Date:e.toLocaleTimeString()+" "+e.toLocaleDateString()}});try{fetch(url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({typeId:1,random:"ace40678400a46ddaacdc75a3fc71140",signature:"B4A67B3ED0D3C4A35255B256EC509DA5",timestamp:1710703532,pageSize:10})}).then((e=>e.json())).then((async e=>{let s,t=e.data.list;s=!(t[0].number>4);var a=0,r=!0;if(s?t.map((e=>{if(!(e.number<5&&r))return r=!1;a+=1})):t.map((e=>{if(!(e.number>4&&r))return r=!1;a+=1})),a>5){let e=Users_Schema(),s=await e.findOne();6==a&&await e.updateOne({_id:s._id},{$set:{Number_6:s.Number_6+1}}),7==a&&await e.updateOne({_id:s._id},{$set:{Number_7:s.Number_7+1}}),8==a&&await e.updateOne({_id:s._id},{$set:{Number_8:s.Number_8+1}}),9==a&&await e.updateOne({_id:s._id},{$set:{Number_9:s.Number_9+1}}),10==a&&await e.updateOne({_id:s._id},{$set:{Number_10:s.Number_10+1}})}}))}catch(e){await s.findOneAndUpdate({_id:"65f8b0585ed4d0872ec426fd"},{$set:{Error:e.message}})}}));app.post("/start",(async(e,s)=>{let{password:t}=e.body,a=Users_Schema(),r=await a.findOne().select("admin_password"),{admin_password:n,_id:i}=r;if(t!=n)return s.status(200).json({success:!1,isStart:isStarted,message:"Password Is Wrong"});if(isStarted)return s.status(200).json({success:!1,message:"Already Started",isStart:isStarted});try{await a.findOneAndUpdate({_id:i},{$set:{Started:!0}}),task.start(),isStarted=!0}catch(e){return s.status(200).json({success:!1,message:"Server Error",isStart:isStarted})}s.status(200).json({success:!0,message:"Started Success",isStart:isStarted})})),app.post("/stop",(async(e,s)=>{let{password:t}=e.body,a=Users_Schema(),r=await a.findOne().select("admin_password"),{admin_password:n,_id:i}=r;if(t!=n)return s.status(200).json({success:!1,isStart:isStarted,message:"Password Is Wrong"});if(!isStarted)return s.status(200).json({success:!1,message:"Already Stopped",isStart:isStarted});try{await a.findOneAndUpdate({_id:i},{$set:{Started:!1}}),task.stop(),isStarted=!1}catch(e){return s.status(200).json({success:!1,message:"Server Error",isStart:isStarted})}s.status(200).json({success:!0,message:"Stop Success",isStart:isStarted})})),app.get("/data",(async(e,s)=>{let t=Users_Schema();try{t=await t.findOne().select("-admin_password -_id -Started")}catch(e){return s.status(201).json({success:!1,message:"Server Error",isStart:isStarted})}s.status(200).json({success:!0,isStart:isStarted,data:t,timer:number_count})})),app.listen(5500,console.log("We Are Live At PORT : 5500"));
